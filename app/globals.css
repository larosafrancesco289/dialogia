@import 'tailwindcss';
@import '../styles/francesco-bootstrap.css';

html,
body,
#__next {
  height: 100%;
}

/* Semantic color helpers (Tailwind-like names mapped to tokens) */
.bg-surface {
  background-color: var(--color-surface);
}
.bg-muted {
  background-color: var(--color-muted);
}
.bg-canvas {
  background-color: var(--color-canvas);
}
.text-fg {
  color: var(--color-fg);
}
.text-fg-muted,
.text-muted-foreground {
  color: var(--color-fg-muted);
}
.border-border {
  border-color: var(--color-border);
}

/* App layout helpers */
.app-shell {
  --header-height: 56px;
  display: grid;
  grid-template-columns: var(--sidebar-width, 320px) 1fr;
  height: 100dvh;
  position: relative;
  transition: grid-template-columns 260ms cubic-bezier(0.2, 0.8, 0.2, 1);
}

.sidebar {
  overflow: hidden;
}

.content {
  overflow: hidden;
  position: relative;
  display: flex;
  flex-direction: column;
}

/* Unified header bar to keep borders aligned across sidebar and content */
.app-header {
  height: var(--header-height);
  padding-left: 16px;
  padding-right: 16px;
  display: flex;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 30;
  /* Apple-like translucent chrome */
  background: color-mix(in oklab, var(--color-surface) 72%, transparent);
  -webkit-backdrop-filter: saturate(180%) blur(18px);
  backdrop-filter: saturate(180%) blur(18px);
}

/* Single separator line spanning both columns */
.app-shell::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: var(--header-height);
  height: 0;
  border-top: 1px solid var(--color-border);
  z-index: 10; /* below sticky header (30) and drawer (50) */
}
/* Minimal icon button for floating controls */
.icon-button {
  height: 28px;
  width: 28px;
  border-radius: 9999px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--color-border);
  background: color-mix(in oklab, var(--color-surface) 85%, transparent);
  color: var(--color-fg);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);
}
.icon-button:hover {
  background: var(--color-muted);
}
.icon-button:focus-visible {
  box-shadow: 0 0 0 2px color-mix(in oklab, var(--color-accent) 100%, transparent);
}

/* Sidebar header actions spacing */
.app-header .traffic-lights + .font-semibold {
  margin-left: 2px;
}

/* Rotate settings gear when drawer is open */
button[aria-label='Open settings'][aria-pressed='true'] > svg {
  transform: rotate(90deg);
  transition: transform 200ms ease;
}

.scroll-area {
  overflow: auto;
  overscroll-behavior: auto;
  -webkit-overflow-scrolling: touch;
}

/* Prevent nested scroll chaining inside drawers/overlays */
.settings-drawer .scroll-area,
.settings-drawer [data-scrollable] {
  overscroll-behavior: contain;
}

/* Reusable glass effect */
.glass {
  background: color-mix(in oklab, var(--color-surface) 72%, transparent);
  -webkit-backdrop-filter: saturate(180%) blur(18px);
  backdrop-filter: saturate(180%) blur(18px);
}

/* Stronger glass for panels/drawers */
.glass-panel {
  background: color-mix(in oklab, var(--color-surface) 78%, transparent);
  -webkit-backdrop-filter: saturate(180%) blur(22px);
  backdrop-filter: saturate(180%) blur(22px);
}

/* Settings drawer + overlay animations */
.settings-overlay {
  animation: fade-in 180ms ease-out;
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.settings-overlay.is-closing {
  animation: fade-out 160ms ease-in forwards;
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
.settings-drawer {
  animation: drawer-in 220ms cubic-bezier(0.2, 0.8, 0.2, 1);
}
@keyframes drawer-in {
  from {
    transform: translateX(8%);
    opacity: 0.6;
  }
  to {
    transform: translateX(0%);
    opacity: 1;
  }
}
.settings-drawer.is-closing {
  animation: drawer-out 200ms cubic-bezier(0.2, 0.8, 0.2, 1) forwards;
}
@keyframes drawer-out {
  from {
    transform: translateX(0%);
    opacity: 1;
  }
  to {
    transform: translateX(6%);
    opacity: 0;
  }
}

/* Segmented control */
.segmented {
  display: inline-flex;
  align-items: stretch;
  gap: 0;
  border: 1px solid var(--color-border);
  background: color-mix(in oklab, var(--color-muted) 60%, transparent);
  border-radius: 9999px;
  padding: 2px;
}
.segmented .segment:first-child {
  margin-left: 0;
}
.segmented .segment:last-child {
  margin-right: 0;
}
.segment {
  height: 32px;
  min-width: 56px;
  padding: 0 12px;
  border-radius: 9999px;
  background: transparent;
  color: var(--color-fg);
}
.segment:hover {
  background: color-mix(in oklab, var(--color-muted) 70%, transparent);
}
.segment.is-active {
  background: color-mix(in oklab, var(--color-accent) 92%, var(--color-muted));
  color: #0b0b0b;
  box-shadow: inset 0 0 0 1px color-mix(in oklab, #ffffff 25%, var(--color-accent));
}

/* Micro-interactions for segmented control */
.segment {
  transition:
    background-color 180ms ease,
    color 180ms ease,
    transform 140ms ease;
}
.segment:active {
  transform: translateY(0.5px);
}

/* Popover */
.popover {
  transform-origin: top right;
  animation: popover-enter 160ms cubic-bezier(0.2, 0.8, 0.2, 1);
}
@keyframes popover-enter {
  from {
    opacity: 0;
    transform: translateY(-6px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Menu item */
.menu-item {
  padding: 8px 10px;
  border-radius: 10px;
  cursor: pointer;
}
.menu-item:hover {
  background: var(--color-muted);
}

/* Chat list item */
.chat-item {
  cursor: pointer;
  background: color-mix(in oklab, var(--color-surface) 96%, transparent);
}
.chat-item:hover {
  background: color-mix(in oklab, var(--color-muted) 70%, transparent);
}
.chat-item.selected {
  box-shadow: inset 0 0 0 2px var(--color-border);
  background: color-mix(in oklab, var(--color-muted) 80%, transparent);
}

/* Subtle lift for cards and pressable buttons */
.card {
  transform: translateY(0);
}
.card:hover {
  transform: translateY(-1px);
}
.pressable {
  transform: translateY(0);
}
.pressable:hover {
  transform: translateY(-1px);
}
.pressable:active {
  transform: translateY(0);
}

/* Message mount animation */
.message-card {
  animation: message-enter 200ms cubic-bezier(0.2, 0.8, 0.2, 1);
}
@keyframes message-enter {
  from {
    opacity: 0;
    transform: translateY(6px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Traffic lights */
.traffic-lights {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  margin-right: 8px;
}
.traffic-lights .dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  border: 1px solid rgba(0, 0, 0, 0.1);
}
.traffic-lights .close {
  background: #ff5f57;
}
.traffic-lights .min {
  background: #febc2e;
}
.traffic-lights .max {
  background: #28c940;
}

/* Smooth motion defaults */
* {
  transition:
    background-color 120ms ease,
    color 120ms ease,
    border-color 120ms ease,
    box-shadow 150ms ease,
    transform 120ms ease;
}
@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}

/* Minimal macOS-like scrollbars */
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
::-webkit-scrollbar-track {
  background: transparent;
}
::-webkit-scrollbar-thumb {
  background: color-mix(in oklab, var(--color-fg-muted) 25%, transparent);
  border-radius: 999px;
  border: 2px solid transparent;
  background-clip: padding-box;
}
::-webkit-scrollbar-thumb:hover {
  background: color-mix(in oklab, var(--color-fg-muted) 40%, transparent);
}

/* Sidebar vibrancy */
.sidebar.bg-surface {
  background: color-mix(in oklab, var(--color-surface) 78%, transparent);
  -webkit-backdrop-filter: saturate(180%) blur(22px);
  backdrop-filter: saturate(180%) blur(22px);
}

/* Ensure the main content scrolls behind a sticky composer */
.content > .flex-1 {
  min-height: 0;
}

/* Composer chrome */
.composer-chrome {
  position: sticky;
  bottom: 0;
  background: color-mix(in oklab, var(--color-surface) 74%, transparent);
  -webkit-backdrop-filter: saturate(180%) blur(16px);
  backdrop-filter: saturate(180%) blur(16px);
  z-index: 60; /* keep above drawer content lists by default */
}

/* Smoother auto-resize for message textarea */
.textarea {
  transition: height 120ms ease;
}

/* Landing gradient similar to blurred GPT hero, but in our palette */
.hero-gradient::before {
  content: '';
  position: absolute;
  inset: -20%;
  background:
    radial-gradient(60% 60% at 50% 40%, rgba(185, 151, 91, 0.25), transparent 60%),
    radial-gradient(40% 40% at 70% 60%, rgba(109, 42, 138, 0.22), transparent 60%),
    radial-gradient(35% 35% at 30% 65%, rgba(212, 175, 55, 0.18), transparent 60%);
  filter: blur(50px);
}

/* Thinking panel effect */
.thinking-panel {
  position: relative;
  border-radius: 14px;
  padding: 12px 14px;
  background: linear-gradient(180deg, rgba(141, 115, 68, 0.06), rgba(141, 115, 68, 0.03));
  border: 1px solid var(--color-border);
  overflow: hidden;
}
.thinking-panel:before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  background:
    radial-gradient(120% 50% at 10% 10%, rgba(212, 175, 55, 0.08), transparent 55%),
    radial-gradient(120% 60% at 90% 20%, rgba(109, 42, 138, 0.08), transparent 60%);
}
.thinking-shimmer {
  position: absolute;
  left: -40%;
  top: 0;
  bottom: 0;
  width: 34%;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0.06),
    rgba(255, 255, 255, 0)
  );
  animation: thinking-scan 2.4s ease-in-out infinite;
}
/* Subtle animated dot used for loading indicators */
.loading-dot::after {
  content: '';
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 999px;
  background: var(--color-accent);
  box-shadow:
    -12px 0 0 color-mix(in oklab, var(--color-accent) 45%, transparent),
    12px 0 0 color-mix(in oklab, var(--color-accent) 45%, transparent);
  animation: loading-dots 1.2s ease-in-out infinite;
}
@keyframes loading-dots {
  0%,
  100% {
    box-shadow:
      -12px 0 0 color-mix(in oklab, var(--color-accent) 45%, transparent),
      12px 0 0 color-mix(in oklab, var(--color-accent) 45%, transparent);
  }
  50% {
    box-shadow:
      0 0 0 color-mix(in oklab, var(--color-accent) 45%, transparent),
      0 0 0 color-mix(in oklab, var(--color-accent) 45%, transparent);
  }
}
@keyframes thinking-scan {
  0% {
    transform: translateX(0%);
    opacity: 0.3;
  }
  50% {
    transform: translateX(220%);
    opacity: 0.7;
  }
  100% {
    transform: translateX(220%);
    opacity: 0;
  }
}

/* Prefer a calmer, static thinking panel in dark mode */
.dark .thinking-panel {
  background: color-mix(in oklab, var(--color-muted) 70%, transparent);
}
.dark .thinking-panel:before {
  display: none;
}
.dark .thinking-shimmer {
  display: none;
}

/* Markdown typography */
.markdown {
  line-height: 1.65;
  word-wrap: break-word;
  overflow-wrap: anywhere;
}
.markdown p {
  margin: 0.5rem 0 0.75rem;
}
.markdown h1,
.markdown h2,
.markdown h3,
.markdown h4,
.markdown h5,
.markdown h6 {
  font-weight: 700;
  line-height: 1.25;
  margin: 1.2rem 0 0.6rem;
}
.markdown h1 {
  font-size: 1.6rem;
}
.markdown h2 {
  font-size: 1.35rem;
}
.markdown h3 {
  font-size: 1.15rem;
}
.markdown h4 {
  font-size: 1.05rem;
}
.markdown h5,
.markdown h6 {
  font-size: 1rem;
}
.markdown ul,
.markdown ol {
  margin: 0.5rem 0 0.9rem 1.35rem;
}
.markdown li {
  margin: 0.2rem 0;
}
.markdown blockquote {
  margin: 0.9rem 0;
  padding: 0.35rem 0.9rem;
  border-left: 3px solid var(--color-border);
  color: var(--color-fg-muted);
  background: color-mix(in oklab, var(--color-muted) 60%, transparent);
  border-radius: 8px;
}
.markdown hr {
  border: none;
  border-top: 1px solid var(--color-border);
  margin: 1rem 0;
}
.markdown code {
  background: var(--color-muted);
  border: 1px solid var(--color-border);
  border-radius: 8px;
  padding: 0.1rem 0.35rem;
}
.markdown pre {
  position: relative;
}
.markdown pre code {
  background: transparent;
  border: none;
  padding: 0;
}
.markdown pre[data-wrap='true'] {
  white-space: pre-wrap;
  word-break: break-word;
}
.markdown pre[data-wrap='false'] {
  white-space: pre;
}
.markdown table {
  width: 100%;
  border-collapse: collapse;
  margin: 0.75rem 0;
  font-size: 0.95em;
}
.markdown thead th {
  text-align: left;
  color: var(--color-fg-muted);
  border-bottom: 1px solid var(--color-border);
  padding: 6px 8px;
}
.markdown tbody td {
  border-top: 1px solid var(--color-border);
  padding: 6px 8px;
}
.markdown img {
  max-width: 100%;
  border-radius: 10px;
}

/* Heading anchors (rehype-slug + autolink) */
.markdown .heading-anchor {
  color: inherit;
  text-decoration: none;
}
.markdown .heading-anchor:hover {
  text-decoration: underline;
  text-decoration-style: dotted;
}

/* Pre toolbar container gets a subtle backdrop to separate from code */
.pre-toolbar {
  pointer-events: none; /* let buttons be clickable only */
}
.pre-toolbar > * {
  pointer-events: auto;
}

/* Fading mask when content is clipped */
.pre-fade {
  position: sticky;
  bottom: -1px;
  left: 0;
  right: 0;
  height: 48px;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0), var(--color-muted));
}

/* Mermaid diagram container */
.mermaid-diagram {
  background: var(--color-muted);
  border: 1px solid var(--color-border);
  border-radius: 14px;
  padding: 12px;
  overflow: auto;
}

/* PrismJS syntax highlighting (colors only; layout handled by components) */
/* Token color variables for light mode */
:root {
  --syntax-comment: #6a737d;
  --syntax-punctuation: var(--color-fg-muted);
  --syntax-keyword: var(--color-accent-2);
  --syntax-string: #22863a;
  --syntax-function: #005cc5;
  --syntax-number: #0b63c8;
  --syntax-operator: color-mix(in oklab, var(--color-accent) 60%, #444);
  --syntax-property: #0b63c8;
  --syntax-class: #6f42c1;
  --syntax-variable: #e36209;
  --syntax-regex: #e36209;
}
/* Token color variables for dark mode */
.dark {
  --syntax-comment: #8b949e;
  --syntax-punctuation: #c9d1d9;
  --syntax-keyword: #c38fff; /* purple-ish for keywords */
  --syntax-string: #7ee787; /* green */
  --syntax-function: #d2a8ff; /* purple */
  --syntax-number: #79c0ff; /* blue */
  --syntax-operator: #e3b341; /* gold */
  --syntax-property: #7aa2f7; /* blue */
  --syntax-class: #d2a8ff;
  --syntax-variable: #ffa657; /* orange */
  --syntax-regex: #ffab70;
}

/* Apply token colors within rendered markdown only */
.markdown code[class*='language-'],
.markdown pre[class*='language-'] {
  text-shadow: none;
}
.markdown .token.comment,
.markdown .token.prolog,
.markdown .token.doctype,
.markdown .token.cdata {
  color: var(--syntax-comment);
}
.markdown .token.punctuation {
  color: var(--syntax-punctuation);
}
.markdown .token.property,
.markdown .token.tag,
.markdown .token.constant,
.markdown .token.symbol,
.markdown .token.deleted {
  color: var(--syntax-property);
}
.markdown .token.boolean,
.markdown .token.number {
  color: var(--syntax-number);
}
.markdown .token.selector,
.markdown .token.attr-name,
.markdown .token.string,
.markdown .token.char,
.markdown .token.builtin,
.markdown .token.inserted {
  color: var(--syntax-string);
}
.markdown .token.operator,
.markdown .token.entity,
.markdown .token.url {
  color: var(--syntax-operator);
}
.markdown .token.atrule,
.markdown .token.keyword {
  color: var(--syntax-keyword);
}
.markdown .token.function {
  color: var(--syntax-function);
}
.markdown .token.class-name {
  color: var(--syntax-class);
}
.markdown .token.regex,
.markdown .token.important,
.markdown .token.variable {
  color: var(--syntax-regex);
}
.markdown .token.bold {
  font-weight: 700;
}
.markdown .token.italic {
  font-style: italic;
}
